@prefix : <http://planqk/OntoQC/QImplementationExample#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@base <http://planqk/OntoQC/QImplementationExample> .

<http://planqk/OntoQC/QImplementationExample> rdf:type owl:Ontology ;
                                               owl:versionIRI <http://planqk/OntoQC/QImplementationExample/1.0.0> ;
                                               owl:imports <http://planqk/OntoQC/1.0.0> ;
                                               <http://purl.org/dc/terms/contributor> "Stoneone AG" ,
                                                                                      "University of Stuttgart, Institute of Architecture of Application Systems (IAAS)" ;
                                               <http://purl.org/dc/terms/creator> "Fraunhofer Institute for Open Communication Systems FOKUS" ;
                                               <http://purl.org/dc/terms/title> "An example of the representation of the demo implementation for Quanvolutional Neural Networks Algorithm referenced in Maxwell Henderson, Samriddhi Shakya, Shashindra Pradhan, Tristan Cook, \"Quanvolutional Neural Networks: Powering Image Recognition with Quantum Circuits\", 2019, arxiv:1904.04767."@en ;
                                               rdfs:comment "This example is based on the is based on the \"Quanvolutional Neural Networks\"-Demo of Andrea Mari: https://pennylane.ai/qml/demos/tutorial_quanvolution.html."@en .

#################################################################
#    Individuals
#################################################################

###  http://planqk/OntoQC/QImplementationExample#auth_755480
:auth_755480 rdf:type owl:NamedIndividual ,
                      <http://planqk/OntoQC#OntoQC_N00111> ;
             <http://www.w3.org/2004/02/skos/core#prefLabel> "Maxwell Henderson" .


###  http://planqk/OntoQC/QImplementationExample#auth_755481
:auth_755481 rdf:type owl:NamedIndividual ,
                      <http://planqk/OntoQC#OntoQC_N00111> ;
             <http://www.w3.org/2004/02/skos/core#prefLabel> "Samriddhi Shakya" .


###  http://planqk/OntoQC/QImplementationExample#auth_755482
:auth_755482 rdf:type owl:NamedIndividual ,
                      <http://planqk/OntoQC#OntoQC_N00111> ;
             <http://www.w3.org/2004/02/skos/core#prefLabel> "Shashindra Pradhan" .


###  http://planqk/OntoQC/QImplementationExample#auth_755483
:auth_755483 rdf:type owl:NamedIndividual ,
                      <http://planqk/OntoQC#OntoQC_N00111> ;
             <http://www.w3.org/2004/02/skos/core#prefLabel> "Tristan Cook" .


###  http://planqk/OntoQC/QImplementationExample#fram_020001
:fram_020001 rdf:type owl:NamedIndividual ,
                      <http://planqk/OntoQC#OntoQC_G00431> ;
             <http://planqk/OntoQC#OntoQC_op00810> :qp_020110 ;
             <http://www.w3.org/2004/02/skos/core#prefLabel> "PennyLane" .


###  http://planqk/OntoQC/QImplementationExample#fram_020002
:fram_020002 rdf:type owl:NamedIndividual ,
                      <http://planqk/OntoQC#OntoQC_G00431> ;
             <http://www.w3.org/2004/02/skos/core#prefLabel> "TensorFlow" .


###  http://planqk/OntoQC/QImplementationExample#fram_020003
:fram_020003 rdf:type owl:NamedIndividual ,
                      <http://planqk/OntoQC#OntoQC_G00331> ;
             <http://www.w3.org/2004/02/skos/core#prefLabel> "matplotlib" .


###  http://planqk/OntoQC/QImplementationExample#hy_759480
:hy_759480 rdf:type owl:NamedIndividual ,
                    <http://planqk/OntoQC#OntoQC_N01464> ;
           <http://planqk/OntoQC#OntoQC_dp00008> "Number of random layers"@en .


###  http://planqk/OntoQC/QImplementationExample#hy_759481
:hy_759481 rdf:type owl:NamedIndividual ,
                    <http://planqk/OntoQC#OntoQC_N01464> ;
           <http://planqk/OntoQC#OntoQC_dp00008> "Size of filter"@en .


###  http://planqk/OntoQC/QImplementationExample#hy_759482
:hy_759482 rdf:type owl:NamedIndividual ,
                    <http://planqk/OntoQC#OntoQC_N01464> ;
           <http://planqk/OntoQC#OntoQC_dp00008> "Number of optimization epochs"@en .


###  http://planqk/OntoQC/QImplementationExample#impl_653482
:impl_653482 rdf:type owl:NamedIndividual ,
                      <http://planqk/OntoQC#OntoQC_H00001> ;
             <http://planqk/OntoQC#OntoQC_op0000S> :qa_653484 ;
             <http://planqk/OntoQC#OntoQC_op00022> :pre_976843 ;
             <http://planqk/OntoQC#OntoQC_op00510> :pl_650002 ;
             <http://planqk/OntoQC#OntoQC_op00710> :fram_020001 ,
                                                   :fram_020002 ,
                                                   :fram_020003 ;
             <http://planqk/OntoQC#OntoQC_dp0000B> "https://pennylane.ai/qml/demos/tutorial_quanvolution.html"^^xsd:string ;
             <http://www.w3.org/2004/02/skos/core#prefLabel> "Quanvolutional Neural Networks Implementation"@en .


###  http://planqk/OntoQC/QImplementationExample#inp_435623
:inp_435623 rdf:type owl:NamedIndividual ,
                     <http://planqk/OntoQC#OntoQC_N01463> ;
            <http://planqk/OntoQC#OntoQC_dp00008> "Data set consisting of MxN-dimensional  images."@en .


###  http://planqk/OntoQC/QImplementationExample#nq_125003
:nq_125003 rdf:type owl:NamedIndividual ,
                    <http://planqk/OntoQC#OntoQC_N00641> ;
           <http://planqk/OntoQC#OntoQC_dp00002> "filter_size ** 2"^^xsd:string ;
           <http://www.w3.org/2004/02/skos/core#prefLabel> "number of qubits"@en .


###  http://planqk/OntoQC/QImplementationExample#pl_650002
:pl_650002 rdf:type owl:NamedIndividual ,
                    <http://planqk/OntoQC#OntoQC_G02111> ;
           <http://www.w3.org/2004/02/skos/core#prefLabel> "Python" .


###  http://planqk/OntoQC/QImplementationExample#pre_976843
:pre_976843 rdf:type owl:NamedIndividual ,
                     <http://planqk/OntoQC#OntoQC_P00421> ;
            <http://planqk/OntoQC#OntoQC_dp00008> "The input image is embedded into a quantum circuit by parametrized rotations applied to the qubits initialized in the ground state."^^xsd:string .


###  http://planqk/OntoQC/QImplementationExample#pt_725451
:pt_725451 rdf:type owl:NamedIndividual ,
                    <http://planqk/OntoQC#OntoQC_N03221> ;
           <http://www.w3.org/2004/02/skos/core#prefLabel> "Image Classification"@en .


###  http://planqk/OntoQC/QImplementationExample#publ_755482
:publ_755482 rdf:type owl:NamedIndividual ,
                      <http://planqk/OntoQC#OntoQC_L00001> ;
             <http://planqk/OntoQC#OntoQC_op0000O> :auth_755480 ,
                                                   :auth_755481 ,
                                                   :auth_755482 ,
                                                   :auth_755483 ;
             <http://planqk/OntoQC#OntoQC_dp0000M> "2019-04-09T00:00:00"^^xsd:dateTime ;
             <http://planqk/OntoQC#OntoQC_dp0000O> "Quanvolutional Neural Networks: Powering Image Recognition with Quantum Circuits."@en .


###  http://planqk/OntoQC/QImplementationExample#qa_653484
:qa_653484 rdf:type owl:NamedIndividual ,
                    <http://planqk/OntoQC#OntoQC_A00211> ;
           <http://planqk/OntoQC#OntoQC_op00007> :inp_435623 ;
           <http://planqk/OntoQC#OntoQC_op0000F> :hy_759480 ,
                                                 :hy_759481 ,
                                                 :hy_759482 ;
           <http://planqk/OntoQC#OntoQC_op0000N> :publ_755482 ;
           <http://planqk/OntoQC#OntoQC_op0000Y> :pt_725451 ;
           <http://planqk/OntoQC#OntoQC_op00050> <http://planqk/OntoQC#qcm_953485> ;
           <http://planqk/OntoQC#OntoQC_op00410> :nq_125003 ;
           <http://planqk/OntoQC#OntoQC_dp0000C> "A fixed non-trainable quantum circuit is used as a “quanvolution” kernel, while the subsequent classical layers are trained for the classification problem of interest."^^xsd:string ;
           <http://www.w3.org/2004/02/skos/core#prefLabel> "Quanvolutional Neural Networks Algorithm"@en .


###  http://planqk/OntoQC/QImplementationExample#qp_020110
:qp_020110 rdf:type owl:NamedIndividual ,
                    <http://planqk/OntoQC#OntoQC_F00001> ;
           <http://planqk/OntoQC#OntoQC_op00910> :qr_020112 ;
           <http://www.w3.org/2004/02/skos/core#prefLabel> "IBM"@en .


###  http://planqk/OntoQC/QImplementationExample#qr_020112
:qr_020112 rdf:type owl:NamedIndividual ,
                    <http://planqk/OntoQC#OntoQC_I02231> ;
           <http://www.w3.org/2004/02/skos/core#prefLabel> "ibmq_qasm_simulator"@en .


###  http://planqk/OntoQC/QImplementationExample#sol_123482
:sol_123482 rdf:type owl:NamedIndividual ,
                     <http://planqk/OntoQC#OntoQC_N00081> ;
            <http://planqk/OntoQC#OntoQC_dp00006> "random"^^xsd:string ;
            <http://planqk/OntoQC#OntoQC_dp00008> """1. A small region of the input image, in our example a 2×2 square, is embedded into a quantum circuit. In this demo, this is achieved with parametrized rotations applied to the qubits initialized in the ground state.
2. A quantum computation, associated to a unitary U, is performed on the system. The unitary could be generated by a variational quantum circuit or, more simply, by a random circuit as proposed in Ref. [1].
3. The quantum system is finally measured, obtaining a list of classical expectation values. The measurement results could also be classically post-processed as proposed in Ref. [1] but, for simplicity, in this demo we directly use the raw expectation values.
4. Analogously to a classical convolution layer, each expectation value is mapped to a different channel of a single output pixel.
Iterating the same procedure over different regions, one can scan the full input image, producing an output object which will be structured as a multi-channel image.
5. The quantum convolution can be followed by further quantum layers or by classical layers."""@en .


###  Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi
